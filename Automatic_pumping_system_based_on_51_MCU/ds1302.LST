C51 COMPILER V9.54   DS1302                                                                01/03/2018 01:59:30 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ds1302.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE ds1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(
                    -2)

line level    source

   1          /*******************************************************************************
   2          * 作    者        : 李城权
   3          * 模块名称        : DS1302时钟模块
   4          * 输    入        : 字符串
   5          * 输    出        : 无
   6          *******************************************************************************/
   7          
   8          
   9          #include "ds1302.h"
  10          #include "lcd12864.h"
  11          //---DS1302写入和读取时分秒的地址命令---//
  12          //---秒分时日月周年 最低位读写位;-------//
  13          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d}; 
  14          uchar WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
  15          const uchar str[];
  16          
  17          //---DS1302时钟初始化2018年1月2日星期二22点00分00秒。---//
  18          //---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  19          uchar TIME[7] = {0, 0, 0x22, 0x02, 0x01, 0x02, 0x18};
  20          
  21          /*******************************************************************************
  22          * 函 数 名         : Ds1302Write
  23          * 函数功能         : 向DS1302命令（地址+数据）
  24          * 输    入         : addr,dat
  25          * 输    出         : 无
  26          *******************************************************************************/
  27          
  28          void Ds1302Write(uchar addr, uchar dat)
  29          {
  30   1        uchar n;
  31   1        RST = 0;
  32   1        _nop_();
  33   1      
  34   1        SCLK = 0;//先将SCLK置低电平。
  35   1        _nop_();
  36   1        RST = 1; //然后将RST(CE)置高电平。
  37   1        _nop_();
  38   1      
  39   1        for (n=0; n<8; n++)//开始传送八位地址命令
  40   1        {
  41   2          DSIO = addr & 0x01;//数据从低位开始传送
  42   2          addr >>= 1;
  43   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  44   2          _nop_();
  45   2          SCLK = 0;
  46   2          _nop_();
  47   2        }
  48   1        for (n=0; n<8; n++)//写入8位数据
  49   1        {
  50   2          DSIO = dat & 0x01;
  51   2          dat >>= 1;
  52   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  53   2          _nop_();
  54   2          SCLK = 0;
C51 COMPILER V9.54   DS1302                                                                01/03/2018 01:59:30 PAGE 2   

  55   2          _nop_();  
  56   2        } 
  57   1           
  58   1        RST = 0;//传送数据结束
  59   1        _nop_();
  60   1      }
  61          
  62          /*******************************************************************************
  63          * 函 数 名         : Ds1302Read
  64          * 函数功能         : 读取一个地址的数据
  65          * 输    入         : addr
  66          * 输    出         : dat
  67          *******************************************************************************/
  68          
  69          uchar Ds1302Read(uchar addr)
  70          {
  71   1        uchar n,dat,dat1;
  72   1        RST = 0;
  73   1        _nop_();
  74   1      
  75   1        SCLK = 0;//先将SCLK置低电平。
  76   1        _nop_();
  77   1        RST = 1;//然后将RST(CE)置高电平。
  78   1        _nop_();
  79   1      
  80   1        for(n=0; n<8; n++)//开始传送八位地址命令
  81   1        {
  82   2          DSIO = addr & 0x01;//数据从低位开始传送
  83   2          addr >>= 1;
  84   2          SCLK = 1;//数据在上升沿时，DS1302读取数据
  85   2          _nop_();
  86   2          SCLK = 0;//DS1302下降沿时，放置数据
  87   2          _nop_();
  88   2        }
  89   1        _nop_();
  90   1        for(n=0; n<8; n++)//读取8位数据
  91   1        {
  92   2          dat1 = DSIO;//从最低位开始接收
  93   2          dat = (dat>>1) | (dat1<<7);
  94   2          SCLK = 1;
  95   2          _nop_();
  96   2          SCLK = 0;//DS1302下降沿时，放置数据
  97   2          _nop_();
  98   2        }
  99   1      
 100   1        RST = 0;
 101   1        _nop_();  //以下为DS1302复位的稳定时间,必须的。
 102   1        SCLK = 1;
 103   1        _nop_();
 104   1        DSIO = 0;
 105   1        _nop_();
 106   1        DSIO = 1;
 107   1        _nop_();
 108   1        return dat; 
 109   1      }
 110          
 111          /*******************************************************************************
 112          * 函 数 名         : Ds1302Init
 113          * 函数功能         : 初始化DS1302.
 114          * 输    入         : 无
 115          * 输    出         : 无
 116          *******************************************************************************/
C51 COMPILER V9.54   DS1302                                                                01/03/2018 01:59:30 PAGE 3   

 117          
 118          void Ds1302Init()
 119          {
 120   1        uchar n;
 121   1        Ds1302Write(0x8E,0X00);    //禁止写保护，就是关闭写保护功能
 122   1        for (n=0; n<7; n++)//写入7个字节的时钟信号：分秒时日月周年
 123   1        {
 124   2          Ds1302Write(WRITE_RTC_ADDR[n],TIME[n]); 
 125   2        }
 126   1        Ds1302Write(0x8E,0x80);    //打开写保护功能
 127   1      }
 128          
 129          /*******************************************************************************
 130          * 函 数 名         : Ds1302ReadTime
 131          * 函数功能       : 读取时钟信息
 132          * 输    入         : 无
 133          * 输    出         : 无
 134          *******************************************************************************/
 135          
 136          void Ds1302ReadTime()
 137          {
 138   1        uchar n;
 139   1        for (n=0; n<7; n++)//读取7个字节的时钟信号：分秒时日月周年
 140   1        {
 141   2          TIME[n] = Ds1302Read(READ_RTC_ADDR[n]);
 142   2        }
 143   1          
 144   1      }
 145          
 146          /*******************************************************************************
 147          * 函数名         : LcdDisplay()
 148          * 函数功能       : 显示函数
 149          * 输入           : 无
 150          * 输出           : 无
 151          *******************************************************************************/
 152          
 153          void LcdDisplay()
 154          {
 155   1        LCD12864_SetWindow(0,0);
 156   1        LCD12864_WriteData('0'+TIME[2]/16);       //时
 157   1        LCD12864_WriteData('0'+(TIME[2]&0x0f));        
 158   1        LCD12864_WriteData(':');
 159   1        LCD12864_WriteData('0'+TIME[1]/16);       //分
 160   1        LCD12864_WriteData('0'+(TIME[1]&0x0f)); 
 161   1      //  LCD12864_WriteData(':');
 162   1      //  LCD12864_WriteData('0'+TIME[0]/16);       //秒
 163   1      //  LCD12864_WriteData('0'+(TIME[0]&0x0f));
 164   1      
 165   1      //  LCD12864_ShowString(0,3,"20");
 166   1          LCD12864_SetWindow(0,4);
 167   1        LCD12864_WriteData('0'+TIME[6]/16);     //年
 168   1        LCD12864_WriteData('0'+(TIME[6]&0x0f));
 169   1      //  LCD12864_ShowString(1,2,"年");
 170   1        LCD12864_WriteData('/');
 171   1        LCD12864_WriteData('0'+TIME[4]/16);     //月
 172   1        LCD12864_WriteData('0'+(TIME[4]&0x0f));
 173   1      //  LCD12864_ShowString(1,4,"月");
 174   1        LCD12864_WriteData('/');
 175   1        LCD12864_WriteData('0'+TIME[3]/16);     //日
 176   1        LCD12864_WriteData('0'+(TIME[3]&0x0f));
 177   1      //  LCD12864_ShowString(1,6,"日");
 178   1        LCD12864_SetWindow(0,3);
C51 COMPILER V9.54   DS1302                                                                01/03/2018 01:59:30 PAGE 4   

 179   1        //LCD12864_ShowString(2,0,"星期");
 180   1      //  LCD12864_ShowString(2,0,str);
 181   1      //  LCD12864_WriteData('0'+(TIME[5]&0x07)); //星期  
 182   1        ShowWeek();
 183   1      }
 184          
 185          void ShowWeek(void)
 186          {
 187   1        uchar week = TIME[5]&0x07;
 188   1        switch(week)
 189   1        {
 190   2          case 1: LCD12864_ShowString(0,3,"一");break;
 191   2          case 2: LCD12864_ShowString(0,3,"二");break;
 192   2          case 3: LCD12864_ShowString(0,3,"三");break;
 193   2          case 4: LCD12864_ShowString(0,3,"四");break;
 194   2          case 5: LCD12864_ShowString(0,3,"五");break;
 195   2          case 6: LCD12864_ShowString(0,3,"六");break;
 196   2          case 0: LCD12864_ShowString(0,3,"日");break;
 197   2        }
 198   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    427    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
